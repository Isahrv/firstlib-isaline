{
  "hash": "0ed2c1664a77c00a8711ee5de1d775bb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Générer un rapport d'analyses\"\nformat: html\ntoc: true\nhtml-math-method: mathjax\nvignette: >\n  %\\VignetteIndexEntry{Générer un rapport d'analyses}\n  %\\VignetteEngine{quarto::html}\n  %\\VignetteEncoding{UTF-8}\nexecute:\n  echo: true\n---\n\n\n\n\n\n# Installation et chargement du package\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nremotes::install_github(\"Isahrv/firstlib-isaline\")\nlibrary(firstlib)\n```\n:::\n\n\n\n# Introduction\n\nLe package `firstlib` permet d’analyser des données municipales sur des élus, et ce pour des communes ou des départements choisis. Pour ce faire, nous retrouvons des fonctions telles que `summary.commune` ou\n`summary.departement`. Cette librarie permet également de générer un rapport Quarto, avec la fonction `generer_rapport`.\n\n## Chargement des données nécessaires pour les exemples\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Chargement des données municipales disponibles sur le package\ndonnees_elus <- firstlib::donnees_elus\n\n# Création du dataframe de la commune de Nantes\ndf_Nantes <- donnees_elus[donnees_elus$Libellé_de_la_commune == \"Nantes\",]\n\n# Création du dataframe du département de la Loire-Atlantique\ndf_Loire_Atlantique <- donnees_elus[donnees_elus$Libellé_du_département == \"Loire-Atlantique\",]\n\n# Affectation des classes `commune` et `departement` respectives à chaque dataframe\nlibrary(firstlib)\ndf_Nantes <- creer_commune(df_Nantes)\ndf_Loire_Atlantique <- creer_departement(df_Loire_Atlantique)\n```\n:::\n\n\n\n# Résumé des communes et départements\n\nLa fonction `summary()` est une fonction générique définie pour les classes `commune` et `departement`. Elle permet d'afficher divers informations et de montrer des statistiques sur les données de communes ou de départements, qui seront alors différents en fonction de la classe de l'objet. \n\n## Résumé d'une commune\n\nCette fonction s'utilise de cette manière : \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(firstlib)\n# Pour un dataframe contenant les données d'une commune :\nsummary(df_Nantes)  \n#> [1] \"Libellé de la commune : Nantes\"\n#> [1] \"Nombre d'élus dans la commune : 66\"\n#> [1] \"Distribution de l'âge des élus de la commune :\"\n#>    0%   25%   50%   75%  100% \n#> 28.00 42.25 50.50 58.25 73.00 \n#> [1] \"Élu le/la plus âgé.e de la commune :\"\n#> # A tibble: 1 × 3\n#>   Nom_de_l_élu Prénom_de_l_élu   Age\n#>   <chr>        <chr>           <dbl>\n#> 1 PROCHASSON   François           73\n```\n:::\n\n\n\n## Résumé d'un département\n\nDe la même façon que pour la fonction `summary.commune()`, voici comment utiliser `summary.departement()` :\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Pour un dataframe contenant les données d'un département :\nsummary(df_Loire_Atlantique)  \n#> [1] \"Nom du département : Loire-Atlantique\"\n#> [2] \"Nom du département : NA\"              \n#> [1] \"Nombre de commune : 208\"\n#> [1] \"Nombre d'élus dans le département : 4782\"\n#> [1] \"Distribution de l'âge des élus du département :\"\n#>   0%  25%  50%  75% 100% \n#>   22   46   54   63   84 \n#> \n#> Élu(e) le/la plus âgé(e) du département :\n#> # A tibble: 1 × 3\n#>   Nom_de_l_élu       Prénom_de_l_élu   Age\n#>   <chr>              <chr>           <dbl>\n#> 1 LE BIHAN-PENNANROZ Janine             84\n#> Commune de l'élu(e) le/la plus âgé(e) : Le Croisic \n#> \n#> Élu(e) le/la plus jeune du département :\n#> # A tibble: 1 × 3\n#>   Nom_de_l_élu Prénom_de_l_élu   Age\n#>   <chr>        <chr>           <dbl>\n#> 1 MERCERON     Leslie             22\n#> Commune de l'élu(e) le/la plus jeune : Saint-Lumine-De-Coutais \n#> \n#> Commune avec la moyenne d'âge la plus faible : Ruffigné \n#> Distribution des âges pour cette commune :\n#>   0%  25%  50%  75% 100% \n#> 28.0 37.5 44.0 49.0 70.0 \n#> \n#> Commune avec la moyenne d'âge la plus élevée : Les Moutiers-En-Retz \n#> Distribution des âges pour cette commune :\n#>   0%  25%  50%  75% 100% \n#> 50.0 63.5 70.0 74.5 81.0\n```\n:::\n\n\n\n# Générer un rapport\n\nEnsuite, avec la fonction `generer_rapport()`, il est possible de sortir un rapport Quarto au format `html`. Ce rapport donnera des informations détaillées sur la commune et le département rentrés en paramètres. Par la suite, seront produit des graphique, l'un pour la commune et l'autre pour le département sélectionnés, montrant la répartition des élus au sein des codes professionnels.\n\nPour procéder à cela, les fonctions `summary.departement()`, `summary.commune()`, `plot.departement()`, `plot.commune()`, `creer_departement` et `creer_commune` du package `firstlib` seront utilisées. En fonction de la classe du dataframe de la commune et du département, les résumés et graphiques sortant seront alors différents.\n\nVoici comment utiliser cette fonction : \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerer_rapport(commune = \"44109\", departement = \"44\", output = \"rapport_nantes.html\")\n#> \n#> \n#> processing file: rapport.qmd\n#> \n  |                                                          \n  |                                                    |   0%\n  |                                                          \n  |.....                                               |   9%                  \n  |                                                          \n  |.........                                           |  18% [unnamed-chunk-1]\n  |                                                          \n  |..............                                      |  27%                  \n  |                                                          \n  |...................                                 |  36% [unnamed-chunk-2]\n  |                                                          \n  |........................                            |  45%                  \n  |                                                          \n  |............................                        |  55% [unnamed-chunk-3]\n  |                                                          \n  |.................................                   |  64%                  \n  |                                                          \n  |......................................              |  73% [unnamed-chunk-4]\n  |                                                          \n  |...........................................         |  82%                  \n  |                                                          \n  |...............................................     |  91% [unnamed-chunk-5]\n  |                                                          \n  |....................................................| 100%                  \n                                                                                                            \n#> output file: rapport.knit.md\n#> \n#> pandoc --output ..\\..\\..\\..\\Temp\\RtmpaSz7OG\\pkgdown-quarto-90342ff47229\\rapport_nantes.html\n#>   to: html\n#>   standalone: true\n#>   section-divs: true\n#>   html-math-method: mathjax\n#>   wrap: none\n#>   default-image-extension: png\n#>   \n#> metadata\n#>   document-css: false\n#>   link-citations: true\n#>   date-format: long\n#>   lang: en\n#>   title: rapport\n#>   editor: visual\n#>   author: Isaline Hervé\n#>   \n#> Output created: ..\\..\\..\\..\\Temp\\RtmpaSz7OG\\pkgdown-quarto-90342ff47229\\rapport_nantes.html\n#> Le rapport a bien été généré : rapport_nantes.html\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
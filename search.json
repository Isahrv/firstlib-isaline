[{"path":"https://isahrv.github.io/firstlib-isaline/articles/generer_un_rapport.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Générer un rapport d’analyses","text":"Le package firstlib permet d’analyser des données municipales sur des élus, et ce pour des communes ou des départements choisis. Pour ce faire, nous retrouvons des fonctions telles que summary.commune ou summary.departement. Cette librarie permet également de générer un rapport Quarto, avec la fonction generer_rapport.","code":"# Chargement des données municipales disponibles sur le package donnees_elus <- firstlib::donnees_elus  # Création du dataframe de la commune de Nantes df_Nantes <- donnees_elus[donnees_elus$Libellé_de_la_commune == \"Nantes\",]  # Création du dataframe du département de la Loire-Atlantique df_Loire_Atlantique <- donnees_elus[donnees_elus$Libellé_du_département == \"Loire-Atlantique\",]  # Affectation des classes `commune` et `departement` respectives à chaque dataframe library(firstlib) creer_commune(df_Nantes) #> # A tibble: 66 × 16 #>    Code_du_département Libellé_du_département Code_de_la_collectivité_à_statut…¹ #>    <chr>               <chr>                                               <dbl> #>  1 44                  Loire-Atlantique                                       NA #>  2 44                  Loire-Atlantique                                       NA #>  3 44                  Loire-Atlantique                                       NA #>  4 44                  Loire-Atlantique                                       NA #>  5 44                  Loire-Atlantique                                       NA #>  6 44                  Loire-Atlantique                                       NA #>  7 44                  Loire-Atlantique                                       NA #>  8 44                  Loire-Atlantique                                       NA #>  9 44                  Loire-Atlantique                                       NA #> 10 44                  Loire-Atlantique                                       NA #> # ℹ 56 more rows #> # ℹ abbreviated name: ¹​Code_de_la_collectivité_à_statut_particulier #> # ℹ 13 more variables: Libellé_de_la_collectivité_à_statut_particulier <chr>, #> #   Code_de_la_commune <chr>, Libellé_de_la_commune <chr>, Nom_de_l_élu <chr>, #> #   Prénom_de_l_élu <chr>, Code_sexe <chr>, Date_de_naissance <chr>, #> #   Code_de_la_catégorie_socio_professionnelle <dbl>, #> #   Libellé_de_la_catégorie_socio_professionnelle <chr>, … creer_departement(df_Loire_Atlantique) #> # A tibble: 8,123 × 16 #>    Code_du_département Libellé_du_département Code_de_la_collectivité_à_statut…¹ #>    <chr>               <chr>                                               <dbl> #>  1 44                  Loire-Atlantique                                       NA #>  2 44                  Loire-Atlantique                                       NA #>  3 44                  Loire-Atlantique                                       NA #>  4 44                  Loire-Atlantique                                       NA #>  5 44                  Loire-Atlantique                                       NA #>  6 44                  Loire-Atlantique                                       NA #>  7 44                  Loire-Atlantique                                       NA #>  8 44                  Loire-Atlantique                                       NA #>  9 44                  Loire-Atlantique                                       NA #> 10 44                  Loire-Atlantique                                       NA #> # ℹ 8,113 more rows #> # ℹ abbreviated name: ¹​Code_de_la_collectivité_à_statut_particulier #> # ℹ 13 more variables: Libellé_de_la_collectivité_à_statut_particulier <chr>, #> #   Code_de_la_commune <chr>, Libellé_de_la_commune <chr>, Nom_de_l_élu <chr>, #> #   Prénom_de_l_élu <chr>, Code_sexe <chr>, Date_de_naissance <chr>, #> #   Code_de_la_catégorie_socio_professionnelle <dbl>, #> #   Libellé_de_la_catégorie_socio_professionnelle <chr>, …"},{"path":"https://isahrv.github.io/firstlib-isaline/articles/generer_un_rapport.html","id":"chargement-des-données-nécessaires-pour-les-exemples","dir":"Articles","previous_headings":"","what":"Chargement des données nécessaires pour les exemples","title":"Générer un rapport d’analyses","text":"","code":"# Chargement des données municipales disponibles sur le package donnees_elus <- firstlib::donnees_elus  # Création du dataframe de la commune de Nantes df_Nantes <- donnees_elus[donnees_elus$Libellé_de_la_commune == \"Nantes\",]  # Création du dataframe du département de la Loire-Atlantique df_Loire_Atlantique <- donnees_elus[donnees_elus$Libellé_du_département == \"Loire-Atlantique\",]  # Affectation des classes `commune` et `departement` respectives à chaque dataframe library(firstlib) creer_commune(df_Nantes) #> # A tibble: 66 × 16 #>    Code_du_département Libellé_du_département Code_de_la_collectivité_à_statut…¹ #>    <chr>               <chr>                                               <dbl> #>  1 44                  Loire-Atlantique                                       NA #>  2 44                  Loire-Atlantique                                       NA #>  3 44                  Loire-Atlantique                                       NA #>  4 44                  Loire-Atlantique                                       NA #>  5 44                  Loire-Atlantique                                       NA #>  6 44                  Loire-Atlantique                                       NA #>  7 44                  Loire-Atlantique                                       NA #>  8 44                  Loire-Atlantique                                       NA #>  9 44                  Loire-Atlantique                                       NA #> 10 44                  Loire-Atlantique                                       NA #> # ℹ 56 more rows #> # ℹ abbreviated name: ¹​Code_de_la_collectivité_à_statut_particulier #> # ℹ 13 more variables: Libellé_de_la_collectivité_à_statut_particulier <chr>, #> #   Code_de_la_commune <chr>, Libellé_de_la_commune <chr>, Nom_de_l_élu <chr>, #> #   Prénom_de_l_élu <chr>, Code_sexe <chr>, Date_de_naissance <chr>, #> #   Code_de_la_catégorie_socio_professionnelle <dbl>, #> #   Libellé_de_la_catégorie_socio_professionnelle <chr>, … creer_departement(df_Loire_Atlantique) #> # A tibble: 8,123 × 16 #>    Code_du_département Libellé_du_département Code_de_la_collectivité_à_statut…¹ #>    <chr>               <chr>                                               <dbl> #>  1 44                  Loire-Atlantique                                       NA #>  2 44                  Loire-Atlantique                                       NA #>  3 44                  Loire-Atlantique                                       NA #>  4 44                  Loire-Atlantique                                       NA #>  5 44                  Loire-Atlantique                                       NA #>  6 44                  Loire-Atlantique                                       NA #>  7 44                  Loire-Atlantique                                       NA #>  8 44                  Loire-Atlantique                                       NA #>  9 44                  Loire-Atlantique                                       NA #> 10 44                  Loire-Atlantique                                       NA #> # ℹ 8,113 more rows #> # ℹ abbreviated name: ¹​Code_de_la_collectivité_à_statut_particulier #> # ℹ 13 more variables: Libellé_de_la_collectivité_à_statut_particulier <chr>, #> #   Code_de_la_commune <chr>, Libellé_de_la_commune <chr>, Nom_de_l_élu <chr>, #> #   Prénom_de_l_élu <chr>, Code_sexe <chr>, Date_de_naissance <chr>, #> #   Code_de_la_catégorie_socio_professionnelle <dbl>, #> #   Libellé_de_la_catégorie_socio_professionnelle <chr>, …"},{"path":"https://isahrv.github.io/firstlib-isaline/articles/generer_un_rapport.html","id":"résumé-des-communes-et-départements","dir":"Articles","previous_headings":"","what":"Résumé des communes et départements","title":"Générer un rapport d’analyses","text":"La fonction summary() est une fonction générique définie pour les classes commune et departement. Elle permet d’afficher divers informations et de montrer des statistiques sur les données de communes ou de départements, qui seront alors différents en fonction de la classe de l’objet. Cette fonction s’utilise de cette manière : De la même façon que pour la fonction summary.commune(), voici comment utiliser summary.departement() :","code":"library(firstlib) # Pour un dataframe contenant les données d'une commune : summary(df_Nantes)   #>  Code_du_département Libellé_du_département #>  Length:66           Length:66              #>  Class :character    Class :character       #>  Mode  :character    Mode  :character       #>                                             #>                                             #>                                             #>                                             #>  Code_de_la_collectivité_à_statut_particulier #>  Min.   : NA                                  #>  1st Qu.: NA                                  #>  Median : NA                                  #>  Mean   :NaN                                  #>  3rd Qu.: NA                                  #>  Max.   : NA                                  #>  NA's   :66                                   #>  Libellé_de_la_collectivité_à_statut_particulier Code_de_la_commune #>  Length:66                                       Length:66          #>  Class :character                                Class :character   #>  Mode  :character                                Mode  :character   #>                                                                     #>                                                                     #>                                                                     #>                                                                     #>  Libellé_de_la_commune Nom_de_l_élu       Prénom_de_l_élu     Code_sexe         #>  Length:66             Length:66          Length:66          Length:66          #>  Class :character      Class :character   Class :character   Class :character   #>  Mode  :character      Mode  :character   Mode  :character   Mode  :character   #>                                                                                 #>                                                                                 #>                                                                                 #>                                                                                 #>  Date_de_naissance  Code_de_la_catégorie_socio_professionnelle #>  Length:66          Min.   :11.00                              #>  Class :character   1st Qu.:33.00                              #>  Mode  :character   Median :37.00                              #>                     Mean   :42.33                              #>                     3rd Qu.:46.00                              #>                     Max.   :85.00                              #>                                                                #>  Libellé_de_la_catégorie_socio_professionnelle Date_de_début_du_mandat #>  Length:66                                     Length:66               #>  Class :character                              Class :character        #>  Mode  :character                              Mode  :character        #>                                                                        #>                                                                        #>                                                                        #>                                                                        #>  Libellé_de_la_fonction Date_de_début_de_la_fonction Code_nationalité   #>  Length:66              Length:66                    Length:66          #>  Class :character       Class :character             Class :character   #>  Mode  :character       Mode  :character             Mode  :character   #>                                                                         #>                                                                         #>                                                                         #> # Pour un dataframe contenant les données d'un département : summary(df_Loire_Atlantique)   #>  Code_du_département Libellé_du_département #>  Length:8123         Length:8123            #>  Class :character    Class :character       #>  Mode  :character    Mode  :character       #>                                             #>                                             #>                                             #>                                             #>  Code_de_la_collectivité_à_statut_particulier #>  Min.   : NA                                  #>  1st Qu.: NA                                  #>  Median : NA                                  #>  Mean   :NaN                                  #>  3rd Qu.: NA                                  #>  Max.   : NA                                  #>  NA's   :8123                                 #>  Libellé_de_la_collectivité_à_statut_particulier Code_de_la_commune #>  Length:8123                                     Length:8123        #>  Class :character                                Class :character   #>  Mode  :character                                Mode  :character   #>                                                                     #>                                                                     #>                                                                     #>                                                                     #>  Libellé_de_la_commune Nom_de_l_élu       Prénom_de_l_élu     Code_sexe         #>  Length:8123           Length:8123        Length:8123        Length:8123        #>  Class :character      Class :character   Class :character   Class :character   #>  Mode  :character      Mode  :character   Mode  :character   Mode  :character   #>                                                                                 #>                                                                                 #>                                                                                 #>                                                                                 #>  Date_de_naissance  Code_de_la_catégorie_socio_professionnelle #>  Length:8123        Min.   : 11.0                              #>  Class :character   1st Qu.: 35.0                              #>  Mode  :character   Median : 46.0                              #>                     Mean   : 48.2                              #>                     3rd Qu.: 62.0                              #>                     Max.   :163.0                              #>                     NA's   :3365                               #>  Libellé_de_la_catégorie_socio_professionnelle Date_de_début_du_mandat #>  Length:8123                                   Length:8123             #>  Class :character                              Class :character        #>  Mode  :character                              Mode  :character        #>                                                                        #>                                                                        #>                                                                        #>                                                                        #>  Libellé_de_la_fonction Date_de_début_de_la_fonction Code_nationalité   #>  Length:8123            Length:8123                  Length:8123        #>  Class :character       Class :character             Class :character   #>  Mode  :character       Mode  :character             Mode  :character   #>                                                                         #>                                                                         #>                                                                         #>"},{"path":"https://isahrv.github.io/firstlib-isaline/articles/generer_un_rapport.html","id":"résumé-dune-commune","dir":"Articles","previous_headings":"","what":"Résumé d’une commune","title":"Générer un rapport d’analyses","text":"Cette fonction s’utilise de cette manière :","code":"library(firstlib) # Pour un dataframe contenant les données d'une commune : summary(df_Nantes)   #>  Code_du_département Libellé_du_département #>  Length:66           Length:66              #>  Class :character    Class :character       #>  Mode  :character    Mode  :character       #>                                             #>                                             #>                                             #>                                             #>  Code_de_la_collectivité_à_statut_particulier #>  Min.   : NA                                  #>  1st Qu.: NA                                  #>  Median : NA                                  #>  Mean   :NaN                                  #>  3rd Qu.: NA                                  #>  Max.   : NA                                  #>  NA's   :66                                   #>  Libellé_de_la_collectivité_à_statut_particulier Code_de_la_commune #>  Length:66                                       Length:66          #>  Class :character                                Class :character   #>  Mode  :character                                Mode  :character   #>                                                                     #>                                                                     #>                                                                     #>                                                                     #>  Libellé_de_la_commune Nom_de_l_élu       Prénom_de_l_élu     Code_sexe         #>  Length:66             Length:66          Length:66          Length:66          #>  Class :character      Class :character   Class :character   Class :character   #>  Mode  :character      Mode  :character   Mode  :character   Mode  :character   #>                                                                                 #>                                                                                 #>                                                                                 #>                                                                                 #>  Date_de_naissance  Code_de_la_catégorie_socio_professionnelle #>  Length:66          Min.   :11.00                              #>  Class :character   1st Qu.:33.00                              #>  Mode  :character   Median :37.00                              #>                     Mean   :42.33                              #>                     3rd Qu.:46.00                              #>                     Max.   :85.00                              #>                                                                #>  Libellé_de_la_catégorie_socio_professionnelle Date_de_début_du_mandat #>  Length:66                                     Length:66               #>  Class :character                              Class :character        #>  Mode  :character                              Mode  :character        #>                                                                        #>                                                                        #>                                                                        #>                                                                        #>  Libellé_de_la_fonction Date_de_début_de_la_fonction Code_nationalité   #>  Length:66              Length:66                    Length:66          #>  Class :character       Class :character             Class :character   #>  Mode  :character       Mode  :character             Mode  :character   #>                                                                         #>                                                                         #>                                                                         #>"},{"path":"https://isahrv.github.io/firstlib-isaline/articles/generer_un_rapport.html","id":"résumé-dun-département","dir":"Articles","previous_headings":"","what":"Résumé d’un département","title":"Générer un rapport d’analyses","text":"De la même façon que pour la fonction summary.commune(), voici comment utiliser summary.departement() :","code":"# Pour un dataframe contenant les données d'un département : summary(df_Loire_Atlantique)   #>  Code_du_département Libellé_du_département #>  Length:8123         Length:8123            #>  Class :character    Class :character       #>  Mode  :character    Mode  :character       #>                                             #>                                             #>                                             #>                                             #>  Code_de_la_collectivité_à_statut_particulier #>  Min.   : NA                                  #>  1st Qu.: NA                                  #>  Median : NA                                  #>  Mean   :NaN                                  #>  3rd Qu.: NA                                  #>  Max.   : NA                                  #>  NA's   :8123                                 #>  Libellé_de_la_collectivité_à_statut_particulier Code_de_la_commune #>  Length:8123                                     Length:8123        #>  Class :character                                Class :character   #>  Mode  :character                                Mode  :character   #>                                                                     #>                                                                     #>                                                                     #>                                                                     #>  Libellé_de_la_commune Nom_de_l_élu       Prénom_de_l_élu     Code_sexe         #>  Length:8123           Length:8123        Length:8123        Length:8123        #>  Class :character      Class :character   Class :character   Class :character   #>  Mode  :character      Mode  :character   Mode  :character   Mode  :character   #>                                                                                 #>                                                                                 #>                                                                                 #>                                                                                 #>  Date_de_naissance  Code_de_la_catégorie_socio_professionnelle #>  Length:8123        Min.   : 11.0                              #>  Class :character   1st Qu.: 35.0                              #>  Mode  :character   Median : 46.0                              #>                     Mean   : 48.2                              #>                     3rd Qu.: 62.0                              #>                     Max.   :163.0                              #>                     NA's   :3365                               #>  Libellé_de_la_catégorie_socio_professionnelle Date_de_début_du_mandat #>  Length:8123                                   Length:8123             #>  Class :character                              Class :character        #>  Mode  :character                              Mode  :character        #>                                                                        #>                                                                        #>                                                                        #>                                                                        #>  Libellé_de_la_fonction Date_de_début_de_la_fonction Code_nationalité   #>  Length:8123            Length:8123                  Length:8123        #>  Class :character       Class :character             Class :character   #>  Mode  :character       Mode  :character             Mode  :character   #>                                                                         #>                                                                         #>                                                                         #>"},{"path":"https://isahrv.github.io/firstlib-isaline/articles/generer_un_rapport.html","id":"générer-un-rapport","dir":"Articles","previous_headings":"","what":"Générer un rapport","title":"Générer un rapport d’analyses","text":"Ensuite, avec la fonction generer_rapport(), il est possible de sortir un rapport Quarto au format html. Ce rapport donnera des informations détaillées sur la commune et le département rentrés en paramètres. Par la suite, seront produit des graphique, l’un pour la commune et l’autre pour le département sélectionnés, montrant la répartition des élus au sein des codes professionnels. Pour procéder à cela, les fonctions summary.departement(), summary.commune(), plot.departement(), plot.commune(), creer_departement et creer_commune du package firstlib seront utilisées. En fonction de la classe du dataframe de la commune et du département, les résumés et graphiques sortant seront alors différents. Voici comment utiliser cette fonction :","code":"generer_rapport(commune = \"44109\", departement = \"44\", output = \"rapport_nantes.html\") #> [31m #>  #> processing file: rapport.qmd #> [39m1/11                   #> 2/11 [unnamed-chunk-1] #> 3/11                   #> 4/11 [unnamed-chunk-2] #> 5/11                   #> 6/11 [unnamed-chunk-3] #> 7/11                   #> 8/11 [unnamed-chunk-4] #> 9/11                   #> 10/11 [unnamed-chunk-5] #> 11/11                   #> [31moutput file: rapport.knit.md #>  #> [39m[1mpandoc --output ../../../../../../tmp/RtmpVevqMl/pkgdown-quarto-1d3464f30d6/rapport_nantes.html[22m #>   to: html #>   standalone: true #>   section-divs: true #>   html-math-method: mathjax #>   wrap: none #>   default-image-extension: png #>    #> [1mmetadata[22m #>   document-css: false #>   link-citations: true #>   date-format: long #>   lang: en #>   title: rapport #>   editor: visual #>   author: Isaline Hervé #>    #> Output created: ../../../../../../tmp/RtmpVevqMl/pkgdown-quarto-1d3464f30d6/rapport_nantes.html #> Le rapport a bien été généré : rapport_nantes.html"},{"path":[]},{"path":"https://isahrv.github.io/firstlib-isaline/articles/rapport_nantes.html","id":null,"dir":"Articles","previous_headings":"","what":"Chargement du package et import des données","title":null,"text":"","code":"library(firstlib) Attaching package: 'firstlib' The following object is masked from 'package:graphics':      plot The following objects are masked from 'package:base':      plot, summary df <- firstlib::donnees_elus"},{"path":"https://isahrv.github.io/firstlib-isaline/articles/rapport_nantes.html","id":null,"dir":"Articles","previous_headings":"","what":"Récupération des paramètres","title":null,"text":"","code":"code_commune <- params$code_commune code_departement <- params$code_departement"},{"path":"https://isahrv.github.io/firstlib-isaline/articles/rapport_nantes.html","id":null,"dir":"Articles","previous_headings":"","what":"Application des fonctions à la commune","title":null,"text":"","code":"df_commune <- df[df$Code_de_la_commune == code_commune,] commune_objet <- creer_commune(df_commune) summary(commune_objet) [1] \"Libellé de la commune : Nantes\" [1] \"Nombre d'élus dans la commune : 66\" [1] \"Distribution de l'âge des élus de la commune :\"    0%   25%   50%   75%  100%  28.00 42.25 50.50 58.25 73.00  [1] \"Élu le/la plus âgé.e de la commune :\" # A tibble: 1 × 3   Nom_de_l_élu Prénom_de_l_élu   Age   <chr>        <chr>           <dbl> 1 PROCHASSON   François           73 plot(commune_objet)"},{"path":"https://isahrv.github.io/firstlib-isaline/articles/rapport_nantes.html","id":null,"dir":"Articles","previous_headings":"","what":"Application des fonctions au département","title":null,"text":"","code":"df_departement <- df[df$Code_du_département == code_departement,] departement_objet <- creer_departement(df_departement) summary(departement_objet) [1] \"Nom du département : Loire-Atlantique\" [2] \"Nom du département : NA\"               [1] \"Nombre de commune : 208\" [1] \"Nombre d'élus dans le département : 4782\" [1] \"Distribution de l'âge des élus du département :\"   0%  25%  50%  75% 100%    22   46   54   63   84   Élu(e) le/la plus âgé(e) du département : # A tibble: 1 × 3   Nom_de_l_élu       Prénom_de_l_élu   Age   <chr>              <chr>           <dbl> 1 LE BIHAN-PENNANROZ Janine             84 Commune de l'élu(e) le/la plus âgé(e) : Le Croisic   Élu(e) le/la plus jeune du département : # A tibble: 1 × 3   Nom_de_l_élu Prénom_de_l_élu   Age   <chr>        <chr>           <dbl> 1 MERCERON     Leslie             22 Commune de l'élu(e) le/la plus jeune : Saint-Lumine-De-Coutais   Commune avec la moyenne d'âge la plus faible : Ruffigné  Distribution des âges pour cette commune :   0%  25%  50%  75% 100%  28.0 37.5 44.0 49.0 70.0   Commune avec la moyenne d'âge la plus élevée : Les Moutiers-En-Retz  Distribution des âges pour cette commune :   0%  25%  50%  75% 100%  50.0 63.5 70.0 74.5 81.0 plot(departement_objet)"},{"path":"https://isahrv.github.io/firstlib-isaline/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Isaline Hervé. Author, maintainer.","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hervé (2025). firstlib: Statistiques sur les élus des villes/départements français. R package version 0.0.1, https://isahrv.github.io/firstlib-isaline/.","code":"@Manual{,   title = {firstlib: Statistiques sur les élus des villes/départements français},   author = {Isaline Hervé},   year = {2025},   note = {R package version 0.0.1},   url = {https://isahrv.github.io/firstlib-isaline/}, }"},{"path":[]},{"path":"https://isahrv.github.io/firstlib-isaline/reference/calcul_distribution_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Une fonction qui calcule la distribution de l'âge des élus — calcul_distribution_age","title":"Une fonction qui calcule la distribution de l'âge des élus — calcul_distribution_age","text":"Une fonction pour avoir la distribution de l'âge des élus (quantiles) dans une ville/département","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/calcul_distribution_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Une fonction qui calcule la distribution de l'âge des élus — calcul_distribution_age","text":"","code":"calcul_distribution_age(df)"},{"path":"https://isahrv.github.io/firstlib-isaline/reference/calcul_distribution_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Une fonction qui calcule la distribution de l'âge des élus — calcul_distribution_age","text":"df le dataframe doit contenir les colonnes correspondantes au schéma","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/calcul_distribution_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Une fonction qui calcule la distribution de l'âge des élus — calcul_distribution_age","text":"l'âge des élus de la ville/ du département correspondant aux quantiles","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/calcul_distribution_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Une fonction qui calcule la distribution de l'âge des élus — calcul_distribution_age","text":"","code":"calcul_distribution_age(df_Nantes) # Devrait retourner un tableau avec les quantiles en ligne et la distribution de l'âge des élus sur la colonne #> Error in calcul_distribution_age(df_Nantes): could not find function \"calcul_distribution_age\""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/compter_nb_commune.html","id":null,"dir":"Reference","previous_headings":"","what":"Une fonction qui trouve le nombre de commune d'un département — compter_nb_commune","title":"Une fonction qui trouve le nombre de commune d'un département — compter_nb_commune","text":"Une fonction pour calculer le nombre de commune dans un département","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/compter_nb_commune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Une fonction qui trouve le nombre de commune d'un département — compter_nb_commune","text":"","code":"compter_nb_commune(df)"},{"path":"https://isahrv.github.io/firstlib-isaline/reference/compter_nb_commune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Une fonction qui trouve le nombre de commune d'un département — compter_nb_commune","text":"df le dataframe doit contenir les colonnes correspondantes au schéma","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/compter_nb_commune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Une fonction qui trouve le nombre de commune d'un département — compter_nb_commune","text":"le nombre de commune du département","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/compter_nb_commune.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Une fonction qui trouve le nombre de commune d'un département — compter_nb_commune","text":"","code":"compter_nb_commune(df_Loire_Atlantique) # Devrait retourner 207 #> Error in compter_nb_commune(df_Loire_Atlantique): could not find function \"compter_nb_commune\""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/compter_nb_elus.html","id":null,"dir":"Reference","previous_headings":"","what":"Une fonction qui compte le nombre d'élus — compter_nb_elus","title":"Une fonction qui compte le nombre d'élus — compter_nb_elus","text":"Une fonction pour compter le nombre d'élus uniques par ville/département","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/compter_nb_elus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Une fonction qui compte le nombre d'élus — compter_nb_elus","text":"","code":"compter_nb_elus(df)"},{"path":"https://isahrv.github.io/firstlib-isaline/reference/compter_nb_elus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Une fonction qui compte le nombre d'élus — compter_nb_elus","text":"df le dataframe doit contenir les colonnes correspondantes au schéma décrit","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/compter_nb_elus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Une fonction qui compte le nombre d'élus — compter_nb_elus","text":"le nombre d'élus uniques","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/compter_nb_elus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Une fonction qui compte le nombre d'élus — compter_nb_elus","text":"","code":"compter_nb_elus(df_Nantes) #> Error in compter_nb_elus(df_Nantes): could not find function \"compter_nb_elus\" 66 #> [1] 66"},{"path":"https://isahrv.github.io/firstlib-isaline/reference/compter_nombre_d_adjoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Une fonction qui compte le nombre d'adjoints — compter_nombre_d_adjoints","title":"Une fonction qui compte le nombre d'adjoints — compter_nombre_d_adjoints","text":"Une fonction pour compter le nombre d'adjoints uniques par ville/département","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/compter_nombre_d_adjoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Une fonction qui compte le nombre d'adjoints — compter_nombre_d_adjoints","text":"","code":"compter_nombre_d_adjoints(df)"},{"path":"https://isahrv.github.io/firstlib-isaline/reference/compter_nombre_d_adjoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Une fonction qui compte le nombre d'adjoints — compter_nombre_d_adjoints","text":"df le dataframe doit contenir les colonnes correspondantes au schéma décrit","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/compter_nombre_d_adjoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Une fonction qui compte le nombre d'adjoints — compter_nombre_d_adjoints","text":"le nombre d'adjoints uniques","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/compter_nombre_d_adjoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Une fonction qui compte le nombre d'adjoints — compter_nombre_d_adjoints","text":"","code":"compter_nombre_d_adjoints(df_Nantes) # Devrait retourner 26 #> Error in compter_nombre_d_adjoints(df_Nantes): could not find function \"compter_nombre_d_adjoints\""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/creer_commune.html","id":null,"dir":"Reference","previous_headings":"","what":"Fonction pour réer un objet de classe ","title":"Fonction pour réer un objet de classe ","text":"Une fonction qui ajoute la classe \"commune\" à un dataframe","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/creer_commune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fonction pour réer un objet de classe ","text":"","code":"creer_commune(df)"},{"path":"https://isahrv.github.io/firstlib-isaline/reference/creer_commune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fonction pour réer un objet de classe ","text":"df Un dataframe avec les informations d'une commune","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/creer_commune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fonction pour réer un objet de classe ","text":"Un objet de classe \"commune\"","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/creer_departement.html","id":null,"dir":"Reference","previous_headings":"","what":"Fonction pour réer un objet de classe ","title":"Fonction pour réer un objet de classe ","text":"Une fonction qui ajoute la classe \"departement\" à un dataframe","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/creer_departement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fonction pour réer un objet de classe ","text":"","code":"creer_departement(df)"},{"path":"https://isahrv.github.io/firstlib-isaline/reference/creer_departement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fonction pour réer un objet de classe ","text":"df Un dataframe avec les informations d'un département","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/creer_departement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fonction pour réer un objet de classe ","text":"Un objet de classe \"departement\"","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/donnees_elus.html","id":null,"dir":"Reference","previous_headings":"","what":"Données sur les élus municipaux — donnees_elus","title":"Données sur les élus municipaux — donnees_elus","text":"Tableau contenant les élus des communes françaises","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/donnees_elus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Données sur les élus municipaux — donnees_elus","text":"","code":"data(donnees_elus)"},{"path":"https://isahrv.github.io/firstlib-isaline/reference/donnees_elus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Données sur les élus municipaux — donnees_elus","text":"Un data frame avec 489 972 lignes et 16 colonnes : Code_du_département code du département Libellé_du_département nom du département Code_de_la_collectivité_à_statut_particulier code de la collectivité à statut particulier Libellé_de_la_collectivité_à_statut_particulier nom de la collectivité à statut particulier Code_de_la_commune code de la commune Libellé_de_la_commune nom de la commune Nom_de_l_élu nom de l'élu Prénom_de_l_élu prénom de l'élu Code_sexe \"M\" si l'élu est un homme, \"F\" si l'élu est une femme Date_de_naissance date de naissance de l'élu au format \"jj/mm/aaaa\" Code_de_la_catégorie_socio_professionnelle code correspondant à la catégorie socio-professionnelle de l'élu Libellé_de_la_catégorie_socio_professionnelle nom de la catégorie socio-professionnelle de l'élu Date_de_début_du_mandat date de début du mandat au format \"jj/mm/aaaa\" Libellé_de_la_fonction nom de la fonction de l'élu Date_de_début_de_la_fonction date de début de la fonction au format \"jj/mm/aaaa\" Code_nationalité code indiquant la nationalité de l'élu (\"FR\" s'il est français)","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/donnees_elus.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Données sur les élus municipaux — donnees_elus","text":"Répertoire National des Élus","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/generer_rapport.html","id":null,"dir":"Reference","previous_headings":"","what":"Génère un rapport Quarto pour une commune ou un département — generer_rapport","title":"Génère un rapport Quarto pour une commune ou un département — generer_rapport","text":"Une fonction qui génère un rapport Quarto au format html correspondant à la commune et au département choisis. Si un document avec le même nom et au même endroit existe déjà, au nom de l'ancien rapport sera ajouté \"old\" ainsi que la date à laquelle le rapport à été généré.","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/generer_rapport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Génère un rapport Quarto pour une commune ou un département — generer_rapport","text":"","code":"generer_rapport(commune, departement, output = \"rapport.html\")"},{"path":"https://isahrv.github.io/firstlib-isaline/reference/generer_rapport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Génère un rapport Quarto pour une commune ou un département — generer_rapport","text":"commune Code de la commune departement Code du département output Chemin du fichier de sortie du rapport","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/generer_rapport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Génère un rapport Quarto pour une commune ou un département — generer_rapport","text":"Génère un rapport au format HTML","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Fonction pour produire un graphique par rapport à un dataframe selon sa classe — plot","title":"Fonction pour produire un graphique par rapport à un dataframe selon sa classe — plot","text":"Fonction générique qui retourne un graphique différent selon la classe du dataframe. Graphique pour un dataframe de classe \"commune\". Graphique pour un dataframe de classe \"departement\".","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fonction pour produire un graphique par rapport à un dataframe selon sa classe — plot","text":"","code":"plot(df)  # S3 method for class 'commune' plot(x)  # S3 method for class 'departement' plot(x)"},{"path":"https://isahrv.github.io/firstlib-isaline/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fonction pour produire un graphique par rapport à un dataframe selon sa classe — plot","text":"df Un dataframe avec les données nécessaires pour le graphique x Un dataframe de classe \"departement\".","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fonction pour produire un graphique par rapport à un dataframe selon sa classe — plot","text":"Un graphique, selon la classe de df Un diagramme en barre horizontal, avec les codes professionnels des élus en ordonné, et le nombre d'élus sur l'axe des abcisses Un diagramme en barre horizontal, avec les 10 codes professionnels des élus les plus représentés en ordonné, et le nombre d'élus sur l'axe des abcisses","code":""},{"path":[]},{"path":"https://isahrv.github.io/firstlib-isaline/reference/plot_code_professions.html","id":null,"dir":"Reference","previous_headings":"","what":"Une fonction qui produit un graphique sur le nombre d'élus par code professionnel — plot_code_professions","title":"Une fonction qui produit un graphique sur le nombre d'élus par code professionnel — plot_code_professions","text":"Une fonction pour avoir un graphique en barre horizontal montrant le nombre d'élus par code professionnel pour une commune/un département","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/plot_code_professions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Une fonction qui produit un graphique sur le nombre d'élus par code professionnel — plot_code_professions","text":"","code":"plot_code_professions(df)"},{"path":"https://isahrv.github.io/firstlib-isaline/reference/plot_code_professions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Une fonction qui produit un graphique sur le nombre d'élus par code professionnel — plot_code_professions","text":"df le dataframe doit contenir les colonnes correspondantes au schéma","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/plot_code_professions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Une fonction qui produit un graphique sur le nombre d'élus par code professionnel — plot_code_professions","text":"un bar chart horizontal, avec le nombre d'élus sur l'axe des abcisses et le code professionnel sur l'axe des ordonnées","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/plot_code_professions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Une fonction qui produit un graphique sur le nombre d'élus par code professionnel — plot_code_professions","text":"","code":"plot_code_professions(df_Nantes) #> Error in plot_code_professions(df_Nantes): could not find function \"plot_code_professions\""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Fonction pour résumer des informations d'un dataframe selon sa classe — summary","title":"Fonction pour résumer des informations d'un dataframe selon sa classe — summary","text":"Fonction générique qui retourne un résumé d'informations différent selon la classe du dataframe. Résumé des informations pour un dataframe de classe \"commune\". Résumé des informations pour un dataframe de classe \"departement\".","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fonction pour résumer des informations d'un dataframe selon sa classe — summary","text":"","code":"summary(df)  # S3 method for class 'commune' summary(x)  # S3 method for class 'departement' summary(x)"},{"path":"https://isahrv.github.io/firstlib-isaline/reference/summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fonction pour résumer des informations d'un dataframe selon sa classe — summary","text":"df Un dataframe avec les données à résumer x Un dataframe de classe \"departement\".","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fonction pour résumer des informations d'un dataframe selon sa classe — summary","text":"Un résumé des données, selon la classe de df Un résumé d'information sur une commune, avec le libellé de la commune, le nombre d'élus, la distribution de l'âge des élus, des informations sur l'élu le/la plus agé.e Un résumé des informations sur un département.","code":""},{"path":[]},{"path":"https://isahrv.github.io/firstlib-isaline/reference/trouver_l_elu_le_plus_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Une fonction qui trouve l'élu le plus agé — trouver_l_elu_le_plus_age","title":"Une fonction qui trouve l'élu le plus agé — trouver_l_elu_le_plus_age","text":"Une fonction pour trouver l'élu le plus agé dans une ville/département","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/trouver_l_elu_le_plus_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Une fonction qui trouve l'élu le plus agé — trouver_l_elu_le_plus_age","text":"","code":"trouver_l_elu_le_plus_age(df)"},{"path":"https://isahrv.github.io/firstlib-isaline/reference/trouver_l_elu_le_plus_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Une fonction qui trouve l'élu le plus agé — trouver_l_elu_le_plus_age","text":"df le dataframe doit contenir les colonnes correspondantes au schéma","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/trouver_l_elu_le_plus_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Une fonction qui trouve l'élu le plus agé — trouver_l_elu_le_plus_age","text":"le nom, le prénom, et l'âge de l'élu le plus agé de la commune/département","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/trouver_l_elu_le_plus_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Une fonction qui trouve l'élu le plus agé — trouver_l_elu_le_plus_age","text":"","code":"trouver_l_elu_le_plus_age(df_Nantes) #> Error in trouver_l_elu_le_plus_age(df_Nantes): could not find function \"trouver_l_elu_le_plus_age\""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/trouver_l_elu_le_plus_jeune.html","id":null,"dir":"Reference","previous_headings":"","what":"Une fonction qui trouve l'élu le plus jeune — trouver_l_elu_le_plus_jeune","title":"Une fonction qui trouve l'élu le plus jeune — trouver_l_elu_le_plus_jeune","text":"Une fonction pour trouver l'élu le plus jeune dans une ville/département","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/trouver_l_elu_le_plus_jeune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Une fonction qui trouve l'élu le plus jeune — trouver_l_elu_le_plus_jeune","text":"","code":"trouver_l_elu_le_plus_jeune(df)"},{"path":"https://isahrv.github.io/firstlib-isaline/reference/trouver_l_elu_le_plus_jeune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Une fonction qui trouve l'élu le plus jeune — trouver_l_elu_le_plus_jeune","text":"df le dataframe doit contenir les colonnes correspondantes au schéma","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/trouver_l_elu_le_plus_jeune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Une fonction qui trouve l'élu le plus jeune — trouver_l_elu_le_plus_jeune","text":"le nom, le prénom, et l'âge de l'élu le plus jeune de la commune/département","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/trouver_l_elu_le_plus_jeune.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Une fonction qui trouve l'élu le plus jeune — trouver_l_elu_le_plus_jeune","text":"","code":"trouver_l_elu_le_plus_jeune(df_Nantes) #> Error in trouver_l_elu_le_plus_jeune(df_Nantes): could not find function \"trouver_l_elu_le_plus_jeune\""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/validate_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Une fonction qui valide le schéma du df — validate_schema","title":"Une fonction qui valide le schéma du df — validate_schema","text":"Une fonction pour valider le fait que le schéma du dataframe suive le schéma souhaité","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/validate_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Une fonction qui valide le schéma du df — validate_schema","text":"","code":"validate_schema(df)"},{"path":"https://isahrv.github.io/firstlib-isaline/reference/validate_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Une fonction qui valide le schéma du df — validate_schema","text":"df le dataframe doit contenir les colonnes correspondantes au schéma décrit","code":""},{"path":"https://isahrv.github.io/firstlib-isaline/reference/validate_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Une fonction qui valide le schéma du df — validate_schema","text":"rien mais stop la fonction si le df ne correspond pas","code":""}]
